AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: The very first Panther stack - static resources which don't require S3
  for deployment
Metadata:
  AWS::ServerlessRepo::Application:
    Name: panther-bootstrap
    Description: The first stack in the Panther Enterprise deployment
    Author: Panther Labs
    HomePageUrl: https://runpanther.io
    SemanticVersion: 0.1.5
    SourceCodeUrl: https://github.com/panther-labs/panther
Parameters:
  LogSubscriptionPrincipals:
    Type: CommaDelimitedList
    Description: The list of Principal ARNs to allow read access to the ProcessedDataBucket
      and subscribe access to ProcessedDataTopicArn
    Default: ''
  EnableS3AccessLogs:
    Type: String
    Description: Enable S3 access logging for all Panther buckets.
    AllowedValues:
      - true
      - false
    Default: true
  AccessLogsBucket:
    Type: String
    Description: Optional external bucket for storing S3 access logs. If not specified,
      the Panther audit bucket is used.
    Default: ''
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    Default: 365
  CustomDomain:
    Type: String
    Description: The FQDN that will be used by the web application (defaults to autogenerated
      ALB URL)
    Default: ''
  TracingMode:
    Type: String
    Description: Enable XRay tracing on GraphQL queries & mutations
    Default: ''
  Debug:
    Type: String
    Description: Toggle debug logging
    Default: false
    AllowedValues:
      - true
      - false
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/24
    PublicOne:
      CIDR: 10.0.0.0/26
    PublicTwo:
      CIDR: 10.0.0.64/26
  ELBAccounts:
    us-east-1:
      ARN: arn:aws:iam::127311923021:root
    us-east-2:
      ARN: arn:aws:iam::033677994240:root
    us-west-1:
      ARN: arn:aws:iam::027434742980:root
    us-west-2:
      ARN: arn:aws:iam::797873946194:root
    ca-central-1:
      ARN: arn:aws:iam::985666609251:root
    eu-central-1:
      ARN: arn:aws:iam::054676820928:root
    eu-west-1:
      ARN: arn:aws:iam::156460612806:root
    eu-west-2:
      ARN: arn:aws:iam::652711504416:root
    eu-west-3:
      ARN: arn:aws:iam::009996457667:root
    eu-north-1:
      ARN: arn:aws:iam::897822967062:root
    ap-east-1:
      ARN: arn:aws:iam::754344448648:root
    ap-northeast-1:
      ARN: arn:aws:iam::582318560864:root
    ap-northeast-2:
      ARN: arn:aws:iam::600734575887:root
    ap-northeast-3:
      ARN: arn:aws:iam::383597477331:root
    ap-southeast-1:
      ARN: arn:aws:iam::114774131450:root
    ap-southeast-2:
      ARN: arn:aws:iam::783225319266:root
    ap-south-1:
      ARN: arn:aws:iam::718504428378:root
    me-south-1:
      ARN: arn:aws:iam::076674570225:root
    sa-east-1:
      ARN: arn:aws:iam::507241528517:root
    us-gov-west-1:
      ARN: arn:aws:iam::048591011584:root
    us-gov-east-1:
      ARN: arn:aws:iam::190560391635:root
    cn-north-1:
      ARN: arn:aws:iam::638102146993:root
    cn-northwest-1:
      ARN: arn:aws:iam::037604701340:root
Conditions:
  ConfigureLogSubscriptions:
    Fn::Not:
      - Fn::Equals:
          - Fn::Select:
              - 0
              - Ref: LogSubscriptionPrincipals
          - ''
  EnableAccessLogs:
    Fn::Equals:
      - Ref: EnableS3AccessLogs
      - true
  ExternalAccessLogs:
    Fn::Not:
      - Fn::Equals:
          - Ref: AccessLogsBucket
          - ''
  TracingEnabled:
    Fn::Not:
      - Fn::Equals:
          - Ref: TracingMode
          - ''
  UseCustomDomain:
    Fn::Not:
      - Fn::Equals:
          - Ref: CustomDomain
          - ''
  EnableDebug:
    Fn::Equals:
      - Ref: Debug
      - true
Resources:
  AuditLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 365
            NoncurrentVersionExpirationInDays: 30
            Status: Enabled
      LoggingConfiguration:
        Fn::If:
          - EnableAccessLogs
          - DestinationBucketName:
              Fn::If:
                - ExternalAccessLogs
                - Ref: AccessLogsBucket
                - Ref: AWS::NoValue
            LogFilePrefix:
              Fn::If:
                - ExternalAccessLogs
                - Fn::Sub: panther-source-${AWS::AccountId}-${AWS::Region}/
                - self/
          - Ref: AWS::NoValue
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  AuditLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: PublicRoute
    Properties:
      Bucket:
        Ref: AuditLogs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VPCFlowAclCheck
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}
          - Sid: VPCFlowWrite
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: CloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}
          - Sid: CloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: ALBWrite
            Effect: Allow
            Principal:
              AWS:
                Fn::FindInMap:
                  - ELBAccounts
                  - Ref: AWS::Region
                  - ARN
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}/AWSLogs/${AWS::AccountId}/*
          - Sid: GuardDutyBucketLocation
            Effect: Allow
            Principal:
              Service: guardduty.amazonaws.com
            Action: s3:GetBucketLocation
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}
          - Sid: GuardDutyWrite
            Effect: Allow
            Principal:
              Service: guardduty.amazonaws.com
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${AuditLogs}/*
  AnalysisVersions:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 365
            Status: Enabled
      LoggingConfiguration:
        Fn::If:
          - EnableAccessLogs
          - DestinationBucketName:
              Fn::If:
                - ExternalAccessLogs
                - Ref: AccessLogsBucket
                - Ref: AuditLogs
            LogFilePrefix:
              Fn::Sub: panther-analysis-versions-${AWS::AccountId}-${AWS::Region}/
          - Ref: AWS::NoValue
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  ProcessedData:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LoggingConfiguration:
        Fn::If:
          - EnableAccessLogs
          - DestinationBucketName:
              Fn::If:
                - ExternalAccessLogs
                - Ref: AccessLogsBucket
                - Ref: AuditLogs
            LogFilePrefix:
              Fn::Sub: panther-processed-data-${AWS::AccountId}-${AWS::Region}/
          - Ref: AWS::NoValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  ProcessedDataPolicy:
    Condition: ConfigureLogSubscriptions
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ProcessedData
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadBucket
            Effect: Allow
            Principal:
              AWS:
                Ref: LogSubscriptionPrincipals
            Action: s3:ListBucket
            Resource:
              Fn::Sub: arn:aws:s3:::${ProcessedData}
          - Sid: ReadLogData
            Effect: Allow
            Principal:
              AWS:
                Ref: LogSubscriptionPrincipals
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              Fn::Sub: arn:aws:s3:::${ProcessedData}/logs/*
          - Sid: ReadRuleData
            Effect: Allow
            Principal:
              AWS:
                Ref: LogSubscriptionPrincipals
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              Fn::Sub: arn:aws:s3:::${ProcessedData}/rules/*
  AthenaResults:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
      LoggingConfiguration:
        Fn::If:
          - EnableAccessLogs
          - DestinationBucketName:
              Fn::If:
                - ExternalAccessLogs
                - Ref: AccessLogsBucket
                - Ref: AuditLogs
            LogFilePrefix:
              Fn::Sub: panther-athena-results-${AWS::AccountId}-${AWS::Region}/
          - Ref: AWS::NoValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
        InviteMessageTemplate:
          EmailSubject: Welcome to Panther!
          EmailMessage:
            Fn::Sub:
              - "<br />Welcome to Panther! We're very excited to have you on board!\n\
                <br />\n<br />To get started, sign in to your <a href=\"https://${PantherHost}/sign-in\"\
                >Panther dashboard</a> with the following temporary credentials:\n<br\
                \ />\n<br />* Username: {username}\n<br />* Password: {####}\n<br />\n\
                <br />Need help, or have questions? Just email us at support@runpanther.io,\
                \ we'd love to help.\n<br />\n<br />Yours truly,\n<br />Panther - https://runpanther.io\n\
                <br />\n<br /><small>Copyright \xA9 2020 Panther Labs Inc. All rights\
                \ reserved.</small>\n"
              - PantherHost:
                  Fn::If:
                    - UseCustomDomain
                    - Ref: CustomDomain
                    - Fn::GetAtt:
                        - PublicLoadBalancer
                        - DNSName
      AutoVerifiedAttributes:
        - email
      LambdaConfig:
        CustomMessage:
          Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-users-api
      Policies:
        PasswordPolicy:
          MinimumLength: 12
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: email
          Required: true
        - AttributeDataType: String
          Mutable: true
          Name: given_name
        - AttributeDataType: String
          Mutable: true
          Name: family_name
      UsernameAttributes:
        - email
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED
      UserPoolName: panther-users
  AppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: Panther
      GenerateSecret: false
      RefreshTokenValidity: 1
      UserPoolId:
        Ref: UserPool
      WriteAttributes:
        - email
        - given_name
        - family_name
  PantherWebImageRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: panther-web
      LifecyclePolicy:
        RegistryId:
          Ref: AWS::AccountId
        LifecyclePolicyText: "{\n  \"rules\": [\n    {\n      \"rulePriority\": 1,\n\
          \      \"description\": \"Makes sure to keep only the last 10 images that\
          \ have been uploaded\",\n      \"selection\": {\n        \"tagStatus\":\
          \ \"any\",\n        \"countType\": \"imageCountMoreThan\",\n        \"countNumber\"\
          : 10\n      },\n      \"action\": { \"type\": \"expire\" }\n    }\n  ]\n\
          }\n"
  CustomResourceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://panther-austin-sam/9a93b4c3a60a8a8714ec1fc3362fcdbb
      Description: Panther custom CloudFormation resources
      FunctionName: panther-cfn-custom-resources
      Environment:
        Variables:
          AWS_ACCOUNT_ID:
            Ref: AWS::AccountId
      Handler: main
      MemorySize: 128
      Runtime: go1.x
      Timeout: 900
      Policies:
        - Id: EcsManagement
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: ecs:*
              Resource: '*'
  WebApplicationCluster:
    Type: Custom::ECS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomResourceFunction
          - Arn
      ClusterName: panther-web-cluster
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - VPC
          - CIDR
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ''
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - PublicOne
          - CIDR
      MapPublicIpOnLaunch: true
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ''
      VpcId:
        Ref: VPC
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - PublicTwo
          - CIDR
      MapPublicIpOnLaunch: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetOne
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetTwo
      RouteTableId:
        Ref: PublicRouteTable
  PublicLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: panther-web-lb
      GroupDescription: Access to the public facing load balancer
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: AuditLogsBucketPolicy
    Properties:
      Name: web
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '30'
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value:
            Ref: AuditLogs
      Subnets:
        - Ref: PublicSubnetOne
        - Ref: PublicSubnetTwo
      SecurityGroups:
        - Ref: PublicLoadBalancerSecurityGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: panther-web
      HealthCheckProtocol: HTTP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '0'
      TargetType: ip
      Port: 80
      Protocol: HTTP
      VpcId:
        Ref: VPC
  WebApplicationServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: panther-web-container
      GroupDescription: Access to the Fargate containers
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId:
            Ref: PublicLoadBalancerSecurityGroup
      VpcId:
        Ref: VPC
  EcsSecurityGroupIngressFromPublicALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the public ALB
      GroupId:
        Ref: WebApplicationServerSecurityGroup
      IpProtocol: '-1'
      SourceSecurityGroupId:
        Ref: PublicLoadBalancerSecurityGroup
  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-2:101802775469:certificate/31a7d9e4-3274-4cdb-b005-06bbbe712250
      DefaultActions:
        - TargetGroupArn:
            Ref: TargetGroup
          Type: forward
      LoadBalancerArn:
        Ref: PublicLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - '*'
      ListenerArn:
        Ref: PublicLoadBalancerListener
      Priority: 1
  AppsyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Appsync service role which invokes API lambdas and gateways and
        writes CloudWatch logs
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: appsync.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      Policies:
        - PolicyName: InvokeLegacyApis
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-*-api
        - PolicyName: InvokeGatewayApis
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: execute-api:Invoke
                Resource:
                  Fn::Sub: arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:*
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: panther-graphql-api
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        AwsRegion:
          Ref: AWS::Region
        UserPoolId:
          Ref: UserPool
        DefaultAction: ALLOW
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
            - AppsyncServiceRole
            - Arn
        FieldLogLevel: ALL
        ExcludeVerboseContent:
          Fn::If:
            - EnableDebug
            - false
            - true
      XrayEnabled:
        Fn::If:
          - TracingEnabled
          - true
          - Ref: AWS::NoValue
  AppsyncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/appsync/apis/${GraphQLApi.ApiId}
      RetentionInDays:
        Ref: CloudWatchLogRetentionDays
  QueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encryption key for all panther SQS queues
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource: '*'
  QueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/panther-sqs
      TargetKeyId:
        Ref: QueueEncryptionKey
  OutputsEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/panther-alert-outputs
      TargetKeyId:
        Ref: OutputsEncryptionKey
  OutputsEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encrypts Panther's alert output configuration
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
  ProcessedDataNotifications:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: panther-processed-data-notifications
      KmsMasterKeyId:
        Ref: QueueEncryptionKey
  ProcessedDataNotificationsTopicPolicy:
    Condition: ConfigureLogSubscriptions
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - Ref: ProcessedDataNotifications
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadTopic
            Effect: Allow
            Principal:
              AWS:
                Ref: LogSubscriptionPrincipals
            Action: sns:Subscribe
            Resource:
              Ref: ProcessedDataNotifications
Outputs:
  AnalysisVersionsBucket:
    Description: S3 bucket name for analysis-api versioning
    Value:
      Ref: AnalysisVersions
  AthenaResultsBucket:
    Description: S3 bucket name for Athena results
    Value:
      Ref: AthenaResults
  AuditLogsBucket:
    Description: S3 bucket name for Panther audit logs (includes s3 access, alb, vpc)
    Value:
      Ref: AuditLogs
  ProcessedDataBucket:
    Description: S3 bucket name for processed log data
    Value:
      Ref: ProcessedData
  SubnetOneId:
    Description: Public subnet one
    Value:
      Ref: PublicSubnetOne
  SubnetTwoId:
    Description: Public subnet two
    Value:
      Ref: PublicSubnetTwo
  LoadBalancerFullName:
    Description: Web load balancer full resource name
    Value:
      Fn::GetAtt:
        - PublicLoadBalancer
        - LoadBalancerFullName
  LoadBalancerTargetGroup:
    Description: Web load balancer distribution target group ARN
    Value:
      Ref: TargetGroup
  LoadBalancerUrl:
    Description: Panther URL - application load balancer or custom domain
    Value:
      Fn::If:
        - UseCustomDomain
        - Ref: CustomDomain
        - Fn::GetAtt:
            - PublicLoadBalancer
            - DNSName
  WebSecurityGroup:
    Description: Public web app security group
    Value:
      Ref: WebApplicationServerSecurityGroup
  ImageRegistry:
    Description: Docker image registry which stores web app images
    Value:
      Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/${PantherWebImageRepository}
  AppsyncServiceRoleArn:
    Description: Appsync IAM role for logs and resolvers
    Value:
      Fn::GetAtt:
        - AppsyncServiceRole
        - Arn
  GraphQLApiEndpoint:
    Description: The URL to the Appsync GraphQL Endpoint
    Value:
      Fn::GetAtt:
        - GraphQLApi
        - GraphQLUrl
  GraphQLApiId:
    Description: The id of the Appsync GraphQL Endpoint
    Value:
      Fn::GetAtt:
        - GraphQLApi
        - ApiId
  UserPoolId:
    Description: Cognito user pool ID
    Value:
      Ref: UserPool
  AppClientId:
    Description: Cognito user pool client ID
    Value:
      Ref: AppClient
  OutputsEncryptionKeyId:
    Description: KMS key for encrypting Panther alert outputs
    Value:
      Ref: OutputsEncryptionKey
  QueueEncryptionKeyId:
    Description: KMS key for encrypting Panther SQS queues
    Value:
      Ref: QueueEncryptionKey
  ProcessedDataTopicArn:
    Description: SNS topic ARN for processed log data notifications
    Value:
      Ref: ProcessedDataNotifications
